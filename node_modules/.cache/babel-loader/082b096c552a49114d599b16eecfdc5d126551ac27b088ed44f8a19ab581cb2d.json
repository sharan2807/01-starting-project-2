{"ast":null,"code":"var _jsxFileName = \"/Users/sharan/Downloads/01-starting-project 2/src/components/CourseGoals/CourseInput/CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true); //2.An indicator to check if what the user entered is valid or not\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      //4.to reset the colour style back to normal if something is entered in the i/p box\n      setIsValid(true); //4.\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      //1.trim removes excess white space,If length=0,wkt i/p box is empty\n\n      setIsValid(false); //2.If we make it into this If block means its invalid and therefore we set it to false\n\n      return; //1.If we return here the line 2 lines below will not get exec. bcz func exec. stops when u return\n    }\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: !isValid ? \"red\" : \"black\"\n        },\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          borderColor: !isValid ? \"red\" : \"#ccc\",\n          // {/* 3.borderColor named according to js not css */} \n          background: !isValid ? \"salmon\" : \"transparent\" // {/* 3.inLine styles have the highest priority */}\n        },\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      style: {\n        color: !isValid ? \"red\" : \"#8b005d\"\n      },\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"         //\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n_c = CourseInput;\nexport default CourseInput;\nvar _c;\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","CourseInput","props","_s","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","onSubmit","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","background","type","onChange","_c","$RefreshReg$"],"sources":["/Users/sharan/Downloads/01-starting-project 2/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);      //2.An indicator to check if what the user entered is valid or not\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {   //4.to reset the colour style back to normal if something is entered in the i/p box\n      setIsValid(true);                            //4.\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {//1.trim removes excess white space,If length=0,wkt i/p box is empty\n\n      setIsValid(false);     //2.If we make it into this If block means its invalid and therefore we set it to false\n\n      return; //1.If we return here the line 2 lines below will not get exec. bcz func exec. stops when u return\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"form-control\">              \n        <label style={{ color: !isValid ? \"red\" : \"black\" }}>Course Goal</label>  {/* 3.the inline style prop wants an object as a value, So if the i/p is !isValid => if its invalid, we set it to red else black  */}\n        <input                          \n          style={{\n            borderColor: !isValid ? \"red\" : \"#ccc\",                 // {/* 3.borderColor named according to js not css */} \n            background: !isValid ? \"salmon\" : \"transparent\",        // {/* 3.inLine styles have the highest priority */}\n          }}\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n        />\n      </div>\n      <Button type=\"submit\" style={{ color: !isValid ? \"red\" : \"#8b005d\" }}>Add Goal</Button>         //\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAM;;EAEnD,MAAMW,sBAAsB,GAAIC,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MAAI;MAC5CN,UAAU,CAAC,IAAI,CAAC,CAAC,CAA4B;IAC/C;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,CAAC,CAAC;IAEtB,IAAIX,YAAY,CAACQ,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MAAC;;MAErCN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAK;;MAEvB,OAAO,CAAC;IACV;IACAL,KAAK,CAACc,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACEJ,OAAA;IAAMiB,QAAQ,EAAEH,iBAAkB;IAAAI,QAAA,gBAChClB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3BlB,OAAA;QAAOoB,KAAK,EAAE;UAAEC,KAAK,EAAE,CAACf,OAAO,GAAG,KAAK,GAAG;QAAQ,CAAE;QAAAY,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,MAAE,eAC1EzB,OAAA;QACEoB,KAAK,EAAE;UACLM,WAAW,EAAE,CAACpB,OAAO,GAAG,KAAK,GAAG,MAAM;UAAkB;UACxDqB,UAAU,EAAE,CAACrB,OAAO,GAAG,QAAQ,GAAG,aAAa,CAAS;QAC1D,CAAE;QACFsB,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAErB;MAAuB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA,CAACF,MAAM;MAAC8B,IAAI,EAAC,QAAQ;MAACR,KAAK,EAAE;QAAEC,KAAK,EAAE,CAACf,OAAO,GAAG,KAAK,GAAG;MAAU,CAAE;MAAAY,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEX,CAAC;AAACtB,EAAA,CAvCIF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}